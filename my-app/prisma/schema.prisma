// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model user {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  username        String            @unique
  displayName     String?
  email           String            @unique
  password        String
  role            roles             @default(user)
  plan            plan[]
  profileimage    String?
  visitedProvince visitedProvince[]
  bookmark        bookmark[]
  createdAt DateTime @default(now())
}

enum roles {
  user
  admin
  superadmin
}

model plan {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String?    @default("My plan")
  budget    Int?       @default(0)
  images    String?
  detail    String?
  startDate DateTime
  endDate   DateTime
  owner     user       @relation(fields: [ownerId], references: [id])
  ownerId   String     @db.ObjectId
  createdAt DateTime?  @default(now())
  updatedAt DateTime?
  status    planStatus @default(draft)
  place     place[]
  bookmark  bookmark[]
}

enum planStatus {
  public
  draft
}

model place {
  id               String  @id @default(auto()) @map("_id") @db.ObjectId
  time             DateTime? 
  name             String?
  detail           String?
  images           String?
  googleCoodinates Json?
  googlePlaceId    String?
  plan             plan    @relation(fields: [planId], references: [id])
  planId           String  @db.ObjectId
  subPlace         subPlace[]
}

model subPlace {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  order         Int?
  name          String?
  googlePlaceId String?
  date          DateTime
  place         place    @relation(fields: [placeId], references: [id])
  placeId       String   @db.ObjectId
}

model location {
  placeId       String @id @map("_id") @db.ObjectId
  name          String
  description   String
  placeLocation String
  provinceTag   String
  activityTag   String
  typeTag       String
}

model subLocation {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model visitedProvince {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  emoji       String?
  province    String
  name        String
  description String?
  owner       user    @relation(fields: [ownerId], references: [id])
  ownerId     String  @db.ObjectId
}

model bookmark {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  owner   user   @relation(fields: [ownerId], references: [id])
  ownerId String @db.ObjectId
  plan    plan   @relation(fields: [planId], references: [id])
  planId  String @db.ObjectId
  @@unique([ownerId, planId])
}
