// 'use client'
// import Head from 'next/head'
// import axios from 'axios'
// import { SetStateAction, JSXElementConstructor, PromiseLikeOfReactNode, ReactElement, ReactNode, ReactPortal, useState } from 'react'

//   export default async function Page() {
//     const [query, setQuery] = useState('');

//       const res = await fetch('https://restcountries.com/v3.1/all')
//       const coun = await res.json
      
//     // set the value of our useState query anytime the user types on our input
//     const handleChange = (e: { target: { value: SetStateAction<string> } }) => {
//     setQuery(e.target.value)
//     }
    
//     return (
//     <div className={`font-nunito bg-gray-100`}>
//     <Head>
//     <title>Rest Countries</title>
//     <meta name="description" content="Generated by create next app" />
//     <link rel="icon" href="/favicon.ico" />
//     </Head>
//     <div className='w-11/12 m-auto mt-40 flex flex-col md:flex-row justify-between items-start md:items-center gap-5 md:gap-0'>
//     <input onChange={handleChange} type='text'/>
//     </div>
    
//     <div className='w-11/12 m-auto md:grid mt-10 gap-10 md:grid-cols-4 flex flex-col'>
//      /* here we map over the element and display each item as a card  */
//     {countries?.map((country: { flags: { png: string | undefined }; name: { common: string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | PromiseLikeOfReactNode | null | undefined }; population: string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | PromiseLikeOfReactNode | null | undefined; region: string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | PromiseLikeOfReactNode | null | undefined; capital: string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | PromiseLikeOfReactNode | null | undefined }) => (
//     <div className='bg-white shadow-lg rounded-md overflow-hidden h-[25rem] cursor-pointer'>
//     <img src={country.flags.png} alt='Country card' className='h-56 w-full object-cover'/>
//     <span className='px-3 py-2 block font-bold text-xl'>{country.name.common}</span>
//     <span className='px-3 py-2 block'><span className='font-bold'>Popoulation:</span> <span className='font-light'>{country.population}</span></span>
//     <span className='px-3 py-2 block'><span className='font-bold'>Region:</span> <span className='font-light'>{country.region}</span></span>
//     <span className='px-3 py-2 block'><span className='font-bold'>Capital:</span> <span className='font-light'>{country.capital}</span></span>
//     </div>
//     ))}
//     </div>
//     </div>
//     )
//     }

import Head from 'next/head'
import axios from 'axios'
import { SetStateAction, JSXElementConstructor, PromiseLikeOfReactNode, ReactElement, ReactNode, ReactPortal, useState, Key } from 'react'
import { FaUserCircle } from 'react-icons/fa'
import { PiDotsThreeCircleFill } from 'react-icons/pi'
import { promises as fs } from 'fs';
   
type Repository = {
  map(arg0: (data: any, index: any) => import("react").JSX.Element): ReactNode
  name: String,
  img: String,
  rating: Number,
  cost: Number,
  provincetag: String
}

export default async function Page() {
  // const [query, setQuery] = useState('');
    
  // // set the value of our useState query anytime the user types on our input
  // const handleChange = (e: { target: { value: SetStateAction<string> } }) => {
  // setQuery(e.target.value)
  // }

  const file = await fs.readFile(process.cwd() + '/app/(user)/explore/trip/data.json', 'utf8');
  const data = JSON.parse(file);
  
  return (
  <div className={`font-nunito bg-gray-100`}>
  <div className='w-11/12 m-auto mt-40 flex flex-col md:flex-row justify-between items-start md:items-center gap-5 md:gap-0'>
  {/* <input onChange={handleChange} type='text'/> */}
  </div>
  
  <div className='w-11/12 m-auto md:grid mt-10 gap-10 md:grid-cols-4 flex flex-col'>
    /* here we map over the element and display each item as a card  */
  {data?.map((data: { img: string | undefined; name: string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | PromiseLikeOfReactNode | null | undefined; rating: string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | PromiseLikeOfReactNode | null | undefined; cost: string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | PromiseLikeOfReactNode | null | undefined; provincetag: string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | PromiseLikeOfReactNode | null | undefined }, index: Key | null | undefined) => (
                <div key={index} className="card-top rounded-lg shadow-lg text-[#674F04] bg-[#F5F5F5] pb-5">
                <img src={data.img} alt="logo" width={0} height={0} sizes="120vw" 
                style={{ width: '100%', height: 'auto' }} className='img block rounded-2xl '/>
                <div className="card-button mx-7">
                    <div className="flex items-center justify-between">
                        <p className="text-xl font-bold text-[#674F04] py-3">
                            {data.name}
                        </p>
                        <div dir="rtl">
                            < PiDotsThreeCircleFill className="text-2xl"/>
                        </div> 
                    </div>
                    <div className="flex">
                        {data.rating}
                    </div>
                    <p className="pt-4">Cost : {data.cost}</p>
                    <div className="tag-section flex">
                        <p className="tag text-sm px-3 py-2 rounded-full bg-[#C3BAAA] text-black mx-2">{data.provincetag}</p>
                    </div>
                </div>
            </div>
  ))}
  </div>
  </div>
  )
  }