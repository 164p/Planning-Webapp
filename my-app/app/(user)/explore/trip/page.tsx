<<<<<<< Updated upstream
import TripCard from '@/app/components/TripCard'
import TypeSelector from '@/app/components/TypeSelector'
import { IoSearchCircle } from 'react-icons/io5'
import Link from 'next/link'
=======
// 'use client'

// import Head from 'next/head'
// import axios from 'axios'
// import { SetStateAction, JSXElementConstructor, PromiseLikeOfReactNode, ReactElement, ReactNode, ReactPortal, useState } from 'react'
>>>>>>> Stashed changes


<<<<<<< Updated upstream
export default function Home() {
    return (
        <div className='bg-[#F5F0E8]'>
            <h1 className='text-[#674F04] text-6xl pt-60 p-10 text-center font-medium'>Explore travel guides</h1>
            <div className='flex justify-center items-center'>
                <div className='relative max-w-[640px] w-full px-4 mb-10'>
                    <input type="search" placeholder="Search your destination" className='w-full h-12 shadow p-4 rounded-full text-black'/>
                    <button type='submit' className='absolute top-0 end-0 pr-5 text-5xl font-medium h-full text-white rounded-e-lg'>
                    <IoSearchCircle className='text-[#4E3C05]'/>
                    </button>
                </div>
            </div>
            <div className='flex pl-5 justify-center items-center mb-20'>
                <p className="text-lg me-2 px-3 py-2 rounded-full bg-[#C3BAAA] text-black">tagggggggggggggggggggg</p>
                <p className="text-lg me-2 px-3 py-2 rounded-full bg-[#C3BAAA] text-black">tag</p>
                <p className="text-lg me-2 px-3 py-2 rounded-full bg-[#C3BAAA] text-black">tag</p>
            </div>
            <p className='flex text-[#674F04] text-2xl font-medium justify-center items-center pb-3'>Select your interest</p>
            <div className='section'>
                <TypeSelector/>
            </div>
            <div className='flex justify-center items-center'>
                <div className='flex w-full p-0.5 mt-10 mb-20 lg:w-2/3 bg-[#674F04] '>
                    
                </div>
            </div>
            <div>
                <div className='grid grid-cols-1 mx-auto max-w-screen-lg '>
                    <Link href="/explore/tripdetail"><TripCard /></Link>
                </div>
            </div>
        </div>
    )
}
=======
//       const res = await fetch('https://maps.googleapis.com/maps/api/place/details/json?place_id=ChIJzwxgI7C0AjERShi5dyiRcJI&key=AIzaSyD9YrY4EzXon6_8L-AdvEhYcV2uh_GdFxs')
//       const data = await res.json()
      
//     // set the value of our useState query anytime the user types on our input
//     const handleChange = (e: { target: { value: SetStateAction<string> } }) => {
//     setQuery(e.target.value)
//     }
    
//     return (
//     <div className={`font-nunito bg-gray-100`}>
//     <Head>
//     <title>Rest Countries</title>
//     <meta name="description" content="Generated by create next app" />
//     <link rel="icon" href="/favicon.ico" />
//     </Head>
//     <div className='w-11/12 m-auto mt-40 flex flex-col md:flex-row justify-between items-start md:items-center gap-5 md:gap-0'>
//     <input onChange={handleChange} type='text'/>
//     </div>
    
//     <div className='w-11/12 m-auto md:grid mt-10 gap-10 md:grid-cols-4 flex flex-col'>
//      /* here we map over the element and display each item as a card  */
//     {data?.map((data: { flags: { png: string | undefined }; name: { common: string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | PromiseLikeOfReactNode | null | undefined }; population: string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | PromiseLikeOfReactNode | null | undefined; region: string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | PromiseLikeOfReactNode | null | undefined; capital: string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | PromiseLikeOfReactNode | null | undefined }) => (
//     <div className='bg-white shadow-lg rounded-md overflow-hidden h-[25rem] cursor-pointer'>
//     <img src={data.photos} alt='Country card' className='h-56 w-full object-cover'/>
//     <span className='px-3 py-2 block font-bold text-xl'>{data.longname}</span>
//     <span className='px-3 py-2 block'><span className='font-bold'>Popoulation:</span> <span className='font-light'>{data.population}</span></span>
//     <span className='px-3 py-2 block'><span className='font-bold'>Region:</span> <span className='font-light'>{data.region}</span></span>
//     <span className='px-3 py-2 block'><span className='font-bold'>Capital:</span> <span className='font-light'>{data.capital}</span></span>
//     </div>
//     ))}
//     </div>
//     </div>
//     )
//     }


import Head from 'next/head'
import axios from 'axios'
// import { SetStateAction, JSXElementConstructor, PromiseLikeOfReactNode, ReactElement, ReactNode, ReactPortal, useState, Key } from 'react'
import { FaUserCircle } from 'react-icons/fa'
import { PiDotsThreeCircleFill } from 'react-icons/pi'
import { promises as fs } from 'fs';

// export default async function Page() {

//       const res = await fetch('https://maps.googleapis.com/maps/api/place/details/json?place_id=ChIJzwxgI7C0AjERShi5dyiRcJI&key=AIzaSyD9YrY4EzXon6_8L-AdvEhYcV2uh_GdFxs')
//       const datas:any = await res.json()

//   return (
//   <div className={`font-nunito bg-gray-100`}>
//   <div className='w-11/12 m-auto mt-40 flex flex-col md:flex-row justify-between items-start md:items-center gap-5 md:gap-0'>
//   </div>
  
//     <div className={`font-nunito bg-gray-100`}>
//     {datas.result.name}
//   </div>
//   </div>
//   )
//   }
'use client'

import React, { useState, useEffect } from 'react';

export default function Page() {

  const test = {
    
  };

  const [placeData , setPlaceData] = useState(null);

  useEffect(() => {
    async function fetchData() {
      const response = await fetch('https://maps.googleapis.com/maps/api/place/details/json?place_id=ChIJzwxgI7C0AjERShi5dyiRcJI&key=AIzaSyD9YrY4EzXon6_8L-AdvEhYcV2uh_GdFxs');
      const placeData = await response.json();
      setPlaceData(placeData);
    };
  
    fetchData();
  }, []);

  if (!placeData) {
    return <p>Loading...</p>;
  }

  return (
    <div className={`font-nunito bg-gray-100`}>
      <div className='w-11/12 m-auto mt-40 flex flex-col md:flex-row justify-between items-start md:items-center gap-5 md:gap-0'>
      </div>
      {placeData ? (
      <div className={`font-nunito bg-gray-100`}>
        {placeData}
      </div>
    ) : (
      <div>Loading data...</div>
    )}
    </div>
  );
}


>>>>>>> Stashed changes
